/*
 * Copyright (c) 2023 The ZMK Contributors
 * SPDX-License-Identifier: MIT
 *
 * Aurora Sofle V2 Rev 1.1. Board with two rotary encoders.
 * Keymap by Sjur Barndon. 
 * 
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>


#define ZMK_POINTING_DEFAULT_MOVE_VAL 600  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 10    // default: 10
#include <dt-bindings/zmk/pointing.h>


// #define BASE 0
// #define SYMS 1
// #define NAVS 2

/ {
    behaviors {
        // shca: tap_dance_0 {                                 // This should be the same as &ht LSHIFT CAPS  ??
        //     compatible = "zmk,behavior-tap-dance";
        //     #binding-cells = <0>;
        //     tapping-term-ms = <200>;
        //     bindings = <&kp LSHFT>, <&kp CAPS>;
        // };
        dbbs: tap_dance_0 {                                 // This should backspace when pressed once, and ctrl backspace when double tapped 
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp BSPC>, <&kp LC(BSPC)>;
        };
        // //Sensor rotation
        // scroll_x: sensor_rotation_scroll_x {
        //     compatible = "zmk,behavior-sensor-rotation";
        //     binding = <&kp LEFT_ARROW>, <&kp RIGHT_ARROW>;
        //  };
        // scroll_y: sensor_rotation_scroll_y {
        //     compatible = "zmk,behavior-sensor-rotation";
        //     binding = <&kp UP_ARROW>, <&kp DOWN_ARROW>;
        // };
        mouse_x: sensor_rotate_x {
            compatible = "zmk,behavior-sensor-rotate-var";
            #sensor-binding-cells = <2>;
            bindings = <&mmv MOVE_UP>, <&mmv MOVE_DOWN>;
         };
        mouse_y: sensor_rotate_y {
            compatible = "zmk,behavior-sensor-rotate-var";
            #sensor-binding-cells = <2>;
            bindings = <&mmv MOVE_LEFT>, <&mmv MOVE_RIGHT>;
         };
        // mousey: sensor_rotate_kp {
        //     compatible = "zmk,behavior-sensor-rotate";
        //     #sensor-binding-cells = <0>;
        //     bindings = <&mmv MOVE_LEFT>, <&mmv MOVE_RIGHT>;
        // };
    };
    keymap {
        compatible = "zmk,keymap";

// ------------------------------------------------------------------------------------------------------------
// |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |  DEL  |
// |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   ?   |
// | SHIFT |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |  *'   | SHIFT |
// | CTRL  |  Z  |  X  |  C   |  V   |  B   |  "??"  |  | "??"  |  N   |  M    |  ,;   | .:   |  -_   |  CTRL |
//               | GUI | ALT  | L2   |  L1  |  BSPC  |  | SPACE |RET/L2|  L2   |  ALT  |  GUI |

        base_layer { //Layer0
            bindings = <

&kp ESC         &kp N1 &kp N2    &kp N3   &kp N4   &kp N5                       &kp N6      &kp N7   &kp N8    &kp N9   &kp N0    &kp DEL
&kp TAB         &kp Q  &kp W     &kp E    &kp R    &kp T                        &kp Y       &kp U    &kp I     &kp O    &kp P     &kp QMARK
&mt LSHFT CAPS  &kp A  &kp S     &kp D    &kp F    &kp G                        &kp H       &kp J    &kp K     &kp L    &kp SEMI  &kp RSHFT
&kp LCTRL       &kp Z  &kp X     &kp C    &kp V    &kp B  &kp C_MUTE &kp H      &kp N       &kp M    &kp COMMA &kp DOT  &kp MINUS &kp LCTRL
                       &kp LGUI  &kp LALT &mo 2    &mo 1  &dbbs      &kp SPACE  &lt 1 RET   &mo 2    &kp RALT  &kp RGUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp PG_UP PG_DN>;
        };

        symbols_layer { //Layer1
            bindings = <

&to 0      &kp F1       &kp F2  &kp F3      &kp F4       &kp F5                       &kp F6    &kp F7    &kp F8    &kp F9    &kp F10   &kp F11   
&kp PIPE   &kp EXCL     &kp DQT &kp HASH    &kp DOLLAR   &kp PRCNT                    &kp AMPS  &kp CARET &kp QMARK &kp SQT   &trans    &kp F12
&trans     &kp TILDE    &kp LT  &kp LBRC    &kp LPAR     &kp LBKT                     &kp RBKT  &kp RPAR  &kp RBRC  &kp GT    &kp EQUAL &kp INS
&trans     &trans       &trans  &trans      &kp MINUS    &kp BSLH  &trans   &trans    &kp FSLH  &kp PLUS  &kp STAR  &trans    &trans    &kp PSCRN
                        &trans  &trans      &trans       &trans    &trans   &trans    &trans    &trans    &trans    &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp PG_UP PG_DN>;
        };

        navigation_layer { //Layer2
            bindings = <

&to 0     &trans &trans   &trans   &trans     &trans                       &trans      &trans    &mkp MCLK &trans    &trans    &trans
&trans    &trans &trans   &kp UP   &trans     &trans                       &trans      &mkp LCLK &kp UP    &mkp RCLK &trans    &trans
&trans    &trans &kp LEFT &kp DOWN &kp RIGHT  &trans                       &trans      &kp LEFT  &kp DOWN  &kp RIGHT &trans    &trans
&trans    &trans &trans   &trans   &trans     &trans    &trans   &trans    &trans      &trans    &trans    &trans    &trans    &trans
                 &trans   &trans   &trans     &trans    &trans   &trans    &trans      &trans    &trans    &trans
             >;

            sensor-bindings = <&mouse_y &mouse_x>;
        };
//         blue_layer { //Layer5
//             bindings = <

// &to 0      &bt BT_SEL 0     &bt BT_SEL 1      &bt BT_SEL 2      &bt BT_SEL 3 &bt BT_SEL 4                 &trans    &trans    &trans    &trans    &trans    &trans
// &kp BT_CLR &kp F2           &kp F3            &kp F4            &kp F5       &kp F6                       &kp F7    &kp F8    &kp F9    &kp F10   &kp F11   &kp F12
// &kp GRAVE  &kp EXCL         &kp AT            &kp HASH          &kp DOLLAR   &kp PRCNT                    &kp CARET &kp AMPS  &kp STAR  &kp LPAR  &kp RPAR  &kp TILDE
// &trans     &ext_power EP_ON &ext_power EP_OFF &ext_power EP_TOG &trans       &trans    &trans   &trans    &trans    &kp MINUS &kp PLUS  &kp LBRC  &kp RBRC  &kp PIPE
//                             &trans            &trans            &trans       &trans    &trans   &trans    &trans    &trans    &trans    &trans
//             >;

//             sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp PG_UP PG_DN>;
//         };

//         template_layer { //LayerX
//             bindings = <

// &to 0     &trans &trans &trans  &trans  &trans                       &trans      &trans    &trans    &trans   &trans    &trans
// &trans    &trans &trans &trans  &trans  &trans                       &trans      &trans    &trans    &trans   &trans    &trans
// &trans    &trans &trans &trans  &trans  &trans                       &trans      &trans    &trans    &trans   &trans    &trans
// &trans    &trans &trans &trans  &trans  &trans    &trans   &trans    &trans      &trans    &trans    &trans   &trans    &trans
//                  &trans &trans  &trans  &trans    &trans   &trans    &trans      &trans    &trans    &trans
//             >;

            // sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp PG_UP PG_DN>;
//         };
    };
};

